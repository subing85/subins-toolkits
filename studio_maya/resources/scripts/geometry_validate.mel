//description: example for validate the geometry and nurbs curves 

//Geometry Check
global proc geometryCheck ()
    {
        	//List top level transform Dag objects
        	string $seleRoot[] = `ls -assemblies`;
        	int $rootSize = `size $seleRoot`;
        	
        	//Mesh 
        	string $seleMesh[] = `listTransforms "-type mesh"`; 
        	int $meshSize = `size $seleMesh`;
        
        	//Polygon Count
        	int $polyCount[] = `polyEvaluate -v $seleMesh`;
        	
        	//Nurbs Surface
        	string $selenSurface[] = `listTransforms "-type nurbsSurface"`;
        	int $nSurfaceSize = `size $selenSurface`;
        
        	//Geo
        	string $seleMesh_geo[] = `ls "*_Geo"`; 
        	int $meshSize_geo = `size $seleMesh_geo`;
        
        	//Notes
        	string $studio = "http://www.subins-toolkits.com";				
        	string $line = "-----------------------------------------";
        	string $assetName	 = ("List top level transform Dag objects  : ");
        
        	string $geoInfo	 = "Total Geometry Information";
        	string $polyC = ("Total Polygon Count	: " + $meshSize);
        	string $verC = ("Total Vertex  Count	: " + $polyCount[0]);	
        	string $surfC = ("Total Surface Count	: " + $nSurfaceSize);
        	string $total_geoC	 = ("Total Geometry Count	: " + ($meshSize + $nSurfaceSize));
        
        	string $s_geoInfo = "Suffix \"Geo\" Geometry Information";
        	string $s_geoC = ("Suffix Geometry Count	: " + $meshSize_geo);
        	string $geoNames = "Geometrys";
        
        	$geometryFile = (`internalVar -userAppDir` + "Geometry Details.txt");
        	$fileId =`fopen $geometryFile "w"`;
        	
        	string $title_message = "\t" + $studio + "\r\n\t" + $line + "\r\n\r\n\t" + $assetName + "\r\n\r\n\t";
        	print ($title_message);
        
        	fprint $fileId ($title_message);
        	
        	string $allDagObj;
        	for ($allDagObj in $seleRoot)
	            {
					fprint $fileId ("\t" + $allDagObj + "\r\n\t");
					print ("\t" + $allDagObj + "\r\n\t");
	            }
            
			string $valiadte_message = "\t" + $line + "\r\n\r\n\r\n\t" + $geoInfo + "\r\n\r\n\t" + "  " + $polyC + "\r\n\t" + "  " +  $verC + "\r\n\r\n\t" + "  " + $surfC + "\r\n\t" + "  " 
				+ $line + "\r\n\t" + "  " + $total_geoC + "\r\n\r\n\r\n\r\n\t" + $s_geoInfo + "\r\n\r\n\t" + "  " + $line + "\r\n\t" + "  " + $s_geoC + "\r\n\r\n\r\n" 
				+ "\r\n\t" + $geoNames + "\r\n\t" + $line + "\r\n";	
        
			print ($valiadte_message);
			fprint $fileId ($valiadte_message);	

			string $extractGeo;
			string $obj;
			for ($obj in $seleMesh)
				{
					int $stringSize = `size $obj`;
					$extractGeo = `substring $obj ($stringSize-3) $stringSize`;		
					if ($extractGeo == "_Geo")
						{
							fprint $fileId ("\t" + $obj + "\r\n");
							print ("\t" + $obj + "\r\n");
						} 
					else
						{
							fprint $fileId ("\t" + "< Error  " + $obj + "\r\n");
							print ("\t" + "< Error  " + $obj + "\r\n");
						}
				}
		
			fclose $fileId;
			print ($geometryFile);
			system("load " + $geometryFile);	
 }
//Geometry Check End
geometryCheck ();